{"version":3,"sources":["factories/gameboardFactory.js","factories/playerFactory.js","components/styled_components/gameControllerStyles.js","reducer.js","GameController.js","components/game_window/Init.js","game_helpers/findShipPlacement.js","components/game_window/ShipPlacementGrid.js","components/icons/ContainerDiv.js","components/icons/CarrierIcon.js","components/icons/BattleshipIcon.js","components/icons/DestroyerIcon.js","components/icons/SubmarineIcon.js","components/icons/PatrolIcon.js","game_helpers/shipTypes.js","components/game_window/CellSelectorGrid.js","factories/shipFactory.js","game_helpers/placePlayerShip.js","game_helpers/placeComputerShips.js","components/game_window/GameSetup.js","components/icons/ShotMarker.js","game_helpers/computerAI.js","game_helpers/computerTurn.js","game_helpers/checkWinner.js","game_helpers/humanTurn.js","components/game_window/EnemyWatersGrid.js","components/game_window/FriendlyWatersGrid.js","components/game_window/GameStart.js","components/styled_components/winnerStyles.js","components/game_window/WinnerScreen.js","assets/sounds/music.mp3","assets/sounds/background_sound.mp3","assets/sounds/fire_shot.mp3","assets/sounds/shot_hit.mp3","assets/sounds/shot_miss.mp3","components/logos/Github.js","components/icons/VolumeOn.js","components/icons/VolumeOff.js","components/game_window/GameWindow.js","components/styled_components/headerStyles.js","assets/images/bs_logo.png","components/header/Header.js","components/styled_components/footerStyles.js","components/footer/FooterLinks.js","components/footer/Footer.js","components/styled_components/appStyles.js","App.js","reportWebVitals.js","index.js"],"names":["Gameboard","board","this","length","init","i","push","hasShip","isShot","location","ship","axis","locationArray","some","loc","num","every","combination","includes","possibleLocationArrays","count","checkCollisions","Math","floor","random","findSuitableLocation","map","cell","Player","name","ships","gameBoard","gameboard","opponentBoard","receiveShot","MainWindow","styled","div","InitWindow","PlayerForm","form","SetupWindow","SetupTitle","h1","AxisButton","button","GridOverlayContainer","SetupGridContainer","GameBoardGrid","Cell","props","position","highlight","timeline","shot","cursor","GameStartContainer","WatersContainer","row","HudWindow","VolumeContainer","LabelContainer","reducer","state","action","type","payload","players","player","newState","hits","find","item","newBoard","index","message","opponent","fireShot","turn","winner","computer","forEach","store","createContext","Provider","GameController","children","useReducer","dispatch","value","Init","setDismount","dismount","playBgSound","checkIfMusicPaused","useContext","useState","setName","error","setError","style","animation","onSubmit","e","preventDefault","trim","human","onAnimationEnd","htmlFor","id","placeholder","onChange","target","onFocus","autoComplete","color","findShipPlacement","shipLocation","filter","start","ShipPlacementGrid","placement","shipProps","sunk","isSunk","getComponentWithProps","ship_length","Number","toString","charAt","CarrierIcon","ContainerDiv","xmlns","width","height","viewBox","fill","preserveAspectRatio","transform","d","BattleshipIcon","DestroyerIcon","SubmarineIcon","PatrolIcon","shipTypes","CellSelectorGrid","handlePlaceShip","currentShip","playerBoard","hovered","setHovered","onClick","onMouseEnter","shipLength","locations","mouseEnterHandler","onMouseLeave","Ship","occupiedCell","placePlayerShip","placeComputerShips","tempBoard","shipType","findRandomShipLocation","pos","GameSetup","fadeOutMusic","setCurrentShip","setAxis","loading","setLoading","useEffect","createLocationArray","ShotCell","ShotMarker","hit","cx","cy","r","computerAI","availableShots","unsunkShots","detectedShip","thisArray","lastIndexOf","possibleShots","furthestRight","filteredPossibleShots","firstUnsunkShot","filteredSoloShots","computerTurn","sound","setShotTimeout","checkWinner","playSound","setTimeout","shotLocation","checkIfShotHit","hitShip","stillPlaying","humanTurn","computerTurnArgs","computerBoard","EnemyWatersGrid","shotTimeout","arr","handlePlayerShot","fillCells","FriendlyWatersGrid","GameStart","hudMessage","setHudMessage","handleHudSet","messageArray","split","counter","messageDisplay","typingMessageEmulator","setInterval","join","clearInterval","margin","WinnerContainer","WinnerTitle","WinnerName","WinnerButton","WinnerScreen","SVG","svg","SvgGithub","href","VolumeSVG","SvgVolumeOn","setVolume","aria-hidden","data-prefix","data-icon","className","SvgVolumeOff","GameWindow","volume","setVolumeProps","musicPlayer","current","useRef","soundPlayer","soundPlayer2","setDismountProp","useCallback","customVolume","newVol","paused","pause","src","music","backgroundSound","load","play","shotMiss","shotHit","fadeOut","VolumeOff","VolumeOn","renderChild","onEnded","ref","HeaderComponent","Logo","img","large","Header","logo","FooterComponent","FooterText","p","FooterLinksDiv","FooterLinks","Github","Footer","StyledApp","header","GameWindowContainer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eda00806.chunk.js","sourcesContent":["class Gameboard {\r\n\tconstructor(board) {\r\n\t\tthis.board = board || [];\r\n\t\t// allow user to pass in their own board to borrow methods for testing\r\n\t\tif (!this.board.length) this.init();\r\n\t}\r\n\r\n\tinit() {\r\n\t\tfor (let i = 0; i < 100; i++) {\r\n\t\t\tthis.board.push({ hasShip: false, isShot: false });\r\n\t\t}\r\n\t}\r\n\r\n\treceiveShot(location) {\r\n\t\tthis.board[location].isShot = true;\r\n\t}\r\n\r\n\tcheckIfShotHit(location) {\r\n\t\t// return true for hit, false for miss\r\n\t\treturn this.board[location].hasShip;\r\n\t}\r\n\r\n\tcreateLocationArray(location, ship, axis) {\r\n\t\tconst locationArray = [];\r\n\t\tfor (let i = 0; i < ship.length; i++) {\r\n\t\t\taxis === 'x'\r\n\t\t\t\t? locationArray.push(location + i)\r\n\t\t\t\t: locationArray.push(location + i * 10);\r\n\t\t}\r\n\t\treturn locationArray;\r\n\t}\r\n\r\n\tcheckCollisions(locationArray) {\r\n\t\t// on x axis, if a ship shares this cell with the next, there is a wall collision\r\n\t\tconst collisions = [9, 19, 29, 39, 49, 59, 69, 79, 89];\r\n\t\tif (locationArray.some((loc) => !this.board[loc])) {\r\n\t\t\t// check if ship placement exceeds board boundaries, which covers y axis\r\n\t\t\treturn false;\r\n\t\t} else if (locationArray.some((loc) => this.board[loc].hasShip)) {\r\n\t\t\t// check for collisions with other ships\r\n\t\t\treturn false;\r\n\t\t} else if (\r\n\t\t\tcollisions.some((num) => {\r\n\t\t\t\t// see comment on collisions array\r\n\t\t\t\treturn [num, num + 1].every((combination) =>\r\n\t\t\t\t\tlocationArray.includes(combination)\r\n\t\t\t\t);\r\n\t\t\t})\r\n\t\t) {\r\n\t\t\treturn false;\r\n\t\t} else {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\tfindRandomShipLocation(ship) {\r\n\t\t// get a random axis\r\n\t\tconst randomAxis = () => ['x', 'y'][Math.floor(Math.random() * 2)];\r\n\t\t// return a location array that will fit this ship\r\n\t\tconst findSuitableLocation = (axis) => {\r\n\t\t\tconst possibleLocationArrays = [];\r\n\t\t\tfor (let i = 0; i < 100 - ship.length; i++) {\r\n\t\t\t\t// make every possible location the ship can exist as an array\r\n\t\t\t\tlet locationArray = [];\r\n\t\t\t\tif (axis === 'x') {\r\n\t\t\t\t\tfor (let count = 0; count < ship.length; count++) {\r\n\t\t\t\t\t\tlocationArray.push(i + count);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (let count = 0; count < ship.length; count++) {\r\n\t\t\t\t\t\tlocationArray.push(i + count * 10);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// test if this location will work, if so, push to the collection of possibilities\r\n\t\t\t\tif (this.checkCollisions(locationArray)) {\r\n\t\t\t\t\tpossibleLocationArrays.push(locationArray);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// return a random choice\r\n\t\t\treturn possibleLocationArrays[\r\n\t\t\t\tMath.floor(Math.random() * possibleLocationArrays.length)\r\n\t\t\t];\r\n\t\t};\r\n\t\treturn findSuitableLocation(randomAxis());\r\n\t}\r\n\t\r\n\t// this returns a version of the game board that represents what the opponent is allowed to see\r\n\topponentBoard() {\r\n\t\treturn this.board.map((cell) => {\r\n\t\t\treturn cell.isShot && cell.hasShip\r\n\t\t\t\t? 'hit'\r\n\t\t\t\t: cell.isShot\r\n\t\t\t\t? 'miss'\r\n\t\t\t\t: 'empty';\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport default Gameboard;\r\n","import Gameboard from './gameboardFactory';\r\n\r\nclass Player {\r\n\tconstructor(name) {\r\n\t\tthis.name = name;\r\n\t\tthis.ships = [];\r\n\t\tthis.gameBoard = new Gameboard();\r\n\t}\r\n\tfireShot(location, gameboard) {\r\n\t\tif (gameboard.opponentBoard()[location] === 'empty') {\r\n\t\t\tgameboard.receiveShot(location);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default Player;\r\n","import styled from 'styled-components';\r\n\r\nconst MainWindow = styled.div`\r\n\tdisplay: flex;\r\n\twidth: 100%;\r\n\tjustify-content: center;\r\n\ttext-align: center;\r\n`;\r\n\r\nconst InitWindow = styled.div`\r\n\tdisplay: flex;\r\n\theight: 100%;\r\n\twidth: 100%;\r\n\ttext-align: center;\r\n`;\r\n\r\nconst PlayerForm = styled.form`\r\n\tdisplay: flex;\r\n\tfont-size: 1.5rem;\r\n\tflex-direction: column;\r\n\tmargin: 3rem auto;\r\n\tpadding: 2rem 0;\r\n\t& > * {\r\n\t\tmargin-top: 1rem;\r\n\t}\r\n\t& > button {\r\n\t\tmargin: 1rem auto;\r\n\t\tpadding: 1rem;\r\n\t\tcursor: pointer;\r\n\t}\r\n\t& > input {\r\n\t\tpadding: 0.5rem;\r\n\t}\r\n`;\r\n\r\nconst SetupWindow = styled.div`\r\n\tdisplay: flex;\r\n\ttext-align: center;\r\n\tflex-direction: column;\r\n\tanimation: fadeinslow 2s ease-in;\r\n\tmargin: auto;\r\n\twidth: 100%;\r\n`;\r\n\r\nconst SetupTitle = styled.h1`\r\n\tfont-size: 3rem;\r\n\t@media (max-width: 900px) {\r\n\t\tfont-size: 2rem;\r\n\t}\r\n`;\r\n\r\nconst AxisButton = styled.button`\r\n\tpadding: 0.5rem;\r\n\tmargin: auto;\r\n\tfont-size: 1.5rem;\r\n\t@media (max-width: 900px) {\r\n\t\tfont-size: 1rem;\r\n\t\tpadding: 0.5rem 0.8rem;\r\n\t}\r\n`;\r\n\r\nconst GridOverlayContainer = styled.div`\r\n\twidth: 100%;\r\n\theight: 36rem;\r\n\tposition: relative;\r\n\tmargin: 1rem auto 0;\r\n\t@media (max-width: 900px) {\r\n\t\theight: 22rem;\r\n\t}\r\n`;\r\n\r\nconst SetupGridContainer = styled.div`\r\n\tposition: absolute;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\tleft: 0;\r\n\tright: 0;\r\n`;\r\n\r\nconst GameBoardGrid = styled.div`\r\n\tdisplay: grid;\r\n\tposition: relative;\r\n\tmargin: 0 auto;\r\n\tgrid-template: repeat(10, 3rem) / repeat(10, 3rem);\r\n\ttext-align: center;\r\n\tgap: 2px;\r\n\t@media (max-width: 1050px) {\r\n\t\tgrid-template: repeat(10, 2rem) / repeat(10, 2rem);\r\n\t}\r\n`;\r\n\r\nconst Cell = styled.div`\r\n\tborder: 1px solid white;\r\n\theight: 100%;\r\n\twidth: 100%;\r\n\ttransition: 0.3s;\r\n\tposition: ${(props) => props.position};\r\n\tbackground-color: ${(props) =>\r\n\t\tprops.highlight ? 'rgba(255, 255, 255, 0.7)' : ''};\r\n\t&:hover {\r\n\t\tbackground-color: ${(props) =>\r\n\t\t\tprops.timeline === 'game start' && props.board === 'friendly'\r\n\t\t\t\t? 'transparent'\r\n\t\t\t\t: props.board === 'enemy' && !props.shot\r\n\t\t\t\t? 'rgba(60, 255, 60, 0.6)'\r\n\t\t\t\t: props.shot\r\n\t\t\t\t? 'rgba(255, 60, 60, 0.6)'\r\n\t\t\t\t: props.highlight\r\n\t\t\t\t? ''\r\n\t\t\t\t: 'rgba(255, 60, 60, 0.6)'};\r\n\t\tcursor: ${(props) => props.cursor};\r\n\t}\r\n`;\r\n\r\nconst GameStartContainer = styled.div`\r\n\tdisplay: grid;\r\n\tgrid-template-rows: 4rem auto 32rem;\r\n\tgrid-template-columns: 1fr 1fr;\r\n\tmargin: 2% auto 4rem;\r\n\twidth: 100%;\r\n\tmax-width: 1200px;\r\n\tanimation: fadein 2s;\r\n\t@media (max-width: 1050px) {\r\n\t\tgrid-template-rows: auto auto 22rem;\r\n\t}\r\n\t@media (max-width: 750px) {\r\n\t\tgrid-template-columns: 1fr;\r\n\t\tgrid-template-rows: 6rem auto 22rem auto 22rem;\r\n\t}\r\n`;\r\n\r\nconst WatersContainer = styled.div`\r\n\theight: 100%;\r\n\twidth: 100%;\r\n\tposition: relative;\r\n\tdisplay: flex;\r\n\t@media (max-width: 750px) {\r\n\t\tgrid-row: ${(props) => props.row};\r\n\t}\r\n`;\r\n\r\nconst HudWindow = styled.div`\r\n\tdisplay: flex;\r\n\tmargin: auto;\r\n\theight: 100%;\r\n\ttext-align: center;\r\n\tgrid-column: 1 / span 2;\r\n\twidth: 70%;\r\n\tborder: 1px solid #ddd;\r\n\tborder-radius: 1rem;\r\n\tbackground: rgb(55, 55, 55);\r\n\tbackground: linear-gradient(\r\n\t\t90deg,\r\n\t\trgba(55, 55, 55, 1) 0%,\r\n\t\trgba(41, 41, 41, 1) 29%,\r\n\t\trgba(41, 41, 41, 1) 76%,\r\n\t\trgba(56, 56, 56, 1) 100%\r\n\t);\r\n\tfont-family: 'Special Elite', monospace;\r\n\tfont-size: 1.4rem;\r\n\t@media (max-width: 1050px) {\r\n\t\tfont-size: 1rem;\r\n\t\tpadding: 10px;\r\n\t}\r\n\t@media (max-width: 750px) {\r\n\t\tgrid-column: 1 / span 1;\r\n\t\tgrid-row: 1 / span 1;\r\n\t}\r\n`;\r\n\r\nconst VolumeContainer = styled.div`\r\n\tdisplay: flex;\r\n\tanimation: fadeinslow 5s;\r\n\tposition: absolute;\r\n\ttop: ${(props) => (props.timeline === 'init' ? '0' : '-3rem')};\r\n\tright: ${(props) => (props.timeline === 'init' ? '' : '3rem')};\r\n\t@media (max-width: 450px) {\r\n\t\tright: ${(props) => (props.timeline === 'init' ? '' : '1.5rem')};\r\n\t}\r\n`;\r\n\r\nconst LabelContainer = styled.div`\r\n\tdisplay: flex;\r\n\twidth: 100%;\r\n\ttext-align: center;\r\n\t@media (max-width: 750px) {\r\n\t\tgrid-row: ${(props) => `${props.row} / span 1`};\r\n\t}\r\n`;\r\n\r\nexport {\r\n\tMainWindow,\r\n\tInitWindow,\r\n\tPlayerForm,\r\n\tSetupWindow,\r\n\tSetupTitle,\r\n\tGameBoardGrid,\r\n\tSetupGridContainer,\r\n\tAxisButton,\r\n\tCell,\r\n\tGridOverlayContainer,\r\n\tGameStartContainer,\r\n\tHudWindow,\r\n\tLabelContainer,\r\n\tWatersContainer,\r\n\tVolumeContainer,\r\n};\r\n","function reducer(state, action) {\r\n\tconst { type, payload } = action;\r\n\tswitch (type) {\r\n\t\tcase 'SET_TIMELINE': {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttimeline: payload,\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase 'SET_PLAYERS': {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tplayers: payload,\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase 'SET_SHIPS': {\r\n\t\t\tconst { player, ships } = payload;\r\n\t\t\tconst newState = { ...state };\r\n\t\t\tnewState.players[player].ships = ships;\r\n\t\t\treturn { ...newState };\r\n\t\t}\r\n\t\tcase 'SET_SHIP_HITS': {\r\n\t\t\tconst { player, ship, hits } = payload;\r\n\t\t\tconst newState = { ...state };\r\n\t\t\tnewState.players[player].ships.find(\r\n\t\t\t\t(item) => item.name === ship.name\r\n\t\t\t).hits = hits;\r\n\t\t\treturn { ...newState };\r\n\t\t}\r\n\t\tcase 'SET_SHIP_ON_BOARD': {\r\n\t\t\tconst { locationArray, player, ship } = payload;\r\n\t\t\tconst newState = { ...state };\r\n\t\t\tconst newBoard = newState.players[player].gameBoard.board.map(\r\n\t\t\t\t(cell, index) => {\r\n\t\t\t\t\tif (locationArray.includes(index)) {\r\n\t\t\t\t\t\tcell.hasShip = ship.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn cell;\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\tnewState.players[player].gameBoard.board = newBoard;\r\n\t\t\treturn { ...newState };\r\n\t\t}\r\n\t\tcase 'SET_BOARD': {\r\n\t\t\tconst newState = { ...state };\r\n\t\t\tconst { player, board } = payload;\r\n\t\t\tnewState.players[player].gameBoard.board = board;\r\n\t\t\treturn { ...newState };\r\n\t\t}\r\n\t\tcase 'SET_MESSAGE': {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: payload,\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase 'RESET_MESSAGE': {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: '',\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase 'FIRE_SHOT': {\r\n\t\t\tconst { player, location } = payload;\r\n\t\t\tconst opponent = player === 'human' ? 'computer' : 'player';\r\n\t\t\tconst newState = { ...state };\r\n\t\t\tnewState.players[player].fireShot(\r\n\t\t\t\tlocation,\r\n\t\t\t\tnewState.players[opponent].gameBoard\r\n\t\t\t);\r\n\t\t\treturn { ...newState };\r\n\t\t}\r\n\t\tcase 'SET_TURN': {\r\n\t\t\tconst newState = { ...state };\r\n\t\t\tnewState.turn = payload;\r\n\t\t\treturn { ...newState };\r\n\t\t}\r\n\t\tcase 'SET_WINNER': {\r\n\t\t\tconst newState = { ...state };\r\n\t\t\tnewState.winner = payload;\r\n\t\t\treturn {\r\n\t\t\t\t...newState,\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase 'RESET_GAME': {\r\n\t\t\tconst initialState = {\r\n\t\t\t\ttimeline: 'init',\r\n\t\t\t\tplayers: [],\r\n\t\t\t\tturn: 0,\r\n\t\t\t\tmessage: '',\r\n\t\t\t\twinner: '',\r\n\t\t\t};\r\n\t\t\treturn {\r\n\t\t\t\t...initialState,\r\n\t\t\t};\r\n\t\t}\r\n\t\t// for testing\r\n\t\tcase 'CHEAT_CODE': {\r\n\t\t\tconst newState = { ...state };\r\n\t\t\tnewState.players.computer.ships.forEach(\r\n\t\t\t\t(ship) => (ship.hits = ship.position)\r\n\t\t\t);\r\n\t\t\treturn { ...newState };\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default reducer;\r\n","import React, { createContext, useReducer } from 'react';\r\nimport reducer from './reducer';\r\n\r\nconst store = createContext();\r\nconst { Provider } = store;\r\n\r\nfunction GameController({ children }) {\r\n\tconst initialState = {\r\n\t\ttimeline: 'init',\r\n\t\tplayers: {},\r\n\t\tturn: 0,\r\n\t\tmessage: '',\r\n\t\twinner: '',\r\n\t};\r\n\tconst [state, dispatch] = useReducer(reducer, initialState);\r\n\treturn <Provider value={{ state, dispatch }}>{children}</Provider>;\r\n}\r\n\r\nexport default GameController;\r\nexport { store };\r\n","import React, { useState, useContext } from 'react';\r\nimport Player from '../../factories/playerFactory';\r\nimport {\r\n\tInitWindow,\r\n\tPlayerForm,\r\n} from '../styled_components/gameControllerStyles';\r\nimport { store } from '../../GameController';\r\n\r\nfunction Init({ setDismount, dismount, playBgSound, checkIfMusicPaused }) {\r\n\tconst { dispatch } = useContext(store);\r\n\tconst [name, setName] = useState('');\r\n\tconst [error, setError] = useState('');\r\n\r\n\tconst handleChange = (e) => {\r\n\t\tsetName(e.target.value);\r\n\t};\r\n\r\n\tconst handleFocus = () => {\r\n\t\tif (checkIfMusicPaused()) {\r\n\t\t\tplayBgSound('music');\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\t// do not refresh page\r\n\t\te.preventDefault();\r\n\r\n\t\t// remove whitespace, reject space-only names\r\n\t\t// this does nothing for this function, only if there is an error\r\n\t\t// and needs to rerender. the setState would occur after this function completed\r\n\t\tsetName(name.trim());\r\n\r\n\t\t// can't do if(!name) because setName hasn't yet updated\r\n\t\tif (!name.trim()) {\r\n\t\t\tsetError('Name required');\r\n\t\t\treturn;\r\n\t\t} else if (name.length > 20) {\r\n\t\t\tsetError('Name is too long');\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\t//remove the error if they enter a valid name after an invalid one\r\n\t\t\tsetError('');\r\n\t\t}\r\n\r\n\t\tconst human = new Player(name.trim());\r\n\t\tconst computer = new Player('Computer');\r\n\t\tdispatch({ type: 'SET_PLAYERS', payload: { human, computer } });\r\n\r\n\t\t// this allows for the component to render with\r\n\t\t// the fade out animation into the next app state\r\n\t\tsetDismount(true);\r\n\t};\r\n\r\n\t// this triggers if the component is fading out into next app state\r\n\tconst handleAnimationEnd = () => {\r\n\t\tif (dismount) dispatch({ type: 'SET_TIMELINE', payload: 'setup' });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<InitWindow>\r\n\t\t\t<PlayerForm\r\n\t\t\t\tstyle={{ animation: dismount ? 'fadeout 1.5s' : 'fadein 6s ease-in' }}\r\n\t\t\t\tonSubmit={handleSubmit}\r\n\t\t\t\tonAnimationEnd={handleAnimationEnd}\r\n\t\t\t>\r\n\t\t\t\t<label htmlFor='name'>Enter player name:</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tname='name'\r\n\t\t\t\t\tid='name'\r\n\t\t\t\t\tplaceholder='Battleship combatant'\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tonFocus={handleFocus}\r\n\t\t\t\t\tautoComplete='off'\r\n\t\t\t\t\tvalue={name}\r\n\t\t\t\t/>\r\n\t\t\t\t{/* displays errors if name is invalid */}\r\n\t\t\t\t<p style={{ color: 'red' }}>{error}</p>\r\n\t\t\t\t<button type='submit'>Start game</button>\r\n\t\t\t</PlayerForm>\r\n\t\t</InitWindow>\r\n\t);\r\n}\r\n\r\nexport default Init;\r\n","const findShipPlacement = (ship, board) => {\r\n\t// check if ship is on board\r\n\tif (board.find((cell) => cell.hasShip === ship.name)) {\r\n\t\tconst boardWithIndex = board.map((cell, index) => {\r\n\t\t\tcell.index = index;\r\n\t\t\treturn cell;\r\n\t\t});\r\n\t\tconst shipLocation = boardWithIndex.filter(\r\n\t\t\t(cell) => cell.hasShip === ship.name\r\n\t\t);\r\n\t\tconst axis =\r\n\t\t\tshipLocation[shipLocation.length - 1].index - shipLocation[0].index <= 5\r\n\t\t\t\t? 'x'\r\n\t\t\t\t: 'y';\r\n\t\treturn {\r\n\t\t\tstart: shipLocation[0].index,\r\n\t\t\taxis,\r\n\t\t};\r\n\t} else {\r\n\t\treturn;\r\n\t}\r\n};\r\n\r\nexport default findShipPlacement;\r\n","import React, { useContext } from 'react';\r\nimport findShipPlacement from '../../game_helpers/findShipPlacement';\r\nimport {\r\n\tGameBoardGrid,\r\n\tSetupGridContainer,\r\n} from '../styled_components/gameControllerStyles';\r\nimport { store } from '../../GameController';\r\n\r\nfunction ShipPlacementGrid() {\r\n\tconst { state } = useContext(store);\r\n\tconst { ships, gameBoard } = state.players.human;\r\n\tconst { board } = gameBoard;\r\n\r\n\treturn (\r\n\t\t<SetupGridContainer>\r\n\t\t\t<GameBoardGrid>\r\n\t\t\t\t{ships.map((ship) => {\r\n\t\t\t\t\tif (findShipPlacement(ship, board)) {\r\n\t\t\t\t\t\tconst placement = findShipPlacement(ship, board);\r\n\t\t\t\t\t\tconst shipProps = {\r\n\t\t\t\t\t\t\tstart: placement.start,\r\n\t\t\t\t\t\t\taxis: placement.axis,\r\n\t\t\t\t\t\t\tsunk: ship.isSunk(),\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\treturn ship.getComponentWithProps(shipProps);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t}\r\n\t\t\t\t})}\r\n\t\t\t</GameBoardGrid>\r\n\t\t</SetupGridContainer>\r\n\t);\r\n}\r\n\r\nexport default ShipPlacementGrid;\r\n","import styled from 'styled-components';\r\n\r\nexport default styled.div`\r\n\tdisplay: flex;\r\n\tborder: 1px solid #ddd;\r\n\theight: 100%;\r\n\tgrid-row: ${({ start, axis, ship_length }) => {\r\n\t\treturn axis === 'y'\r\n\t\t\t? `${Math.floor(start / 10) + 1} / span ${ship_length}`\r\n\t\t\t: `${Math.floor(start / 10) + 1} / span 1`;\r\n\t}};\r\n\tgrid-column: ${({ start, axis, ship_length }) => {\r\n\t\treturn axis === 'x'\r\n\t\t\t? `${\r\n\t\t\t\t\tNumber(start.toString().charAt(start.toString().length - 1)) + 1\r\n\t\t\t  } / span ${ship_length}`\r\n\t\t\t: `${\r\n\t\t\t\t\tNumber(start.toString().charAt(start.toString().length - 1)) + 1\r\n\t\t\t  } / span 1`;\r\n\t}};\r\n`;\r\n","import * as React from 'react';\r\nimport ContainerDiv from './ContainerDiv';\r\n\r\nfunction CarrierIcon(props) {\r\n\tconst { start, axis, ship_length, sunk } = props;\r\n\treturn (\r\n\t\t<ContainerDiv start={start} axis={axis} ship_length={ship_length}>\r\n\t\t\t<svg\r\n\t\t\t\txmlns='http://www.w3.org/2000/svg'\r\n\t\t\t\twidth='100%'\r\n\t\t\t\theight='100%'\r\n\t\t\t\tviewBox={axis === 'x' ? '0 0 299 95' : '0 0 95 299'}\r\n\t\t\t\tfill={sunk === 'sunk' ? 'grey' : 'skyblue'}\r\n\t\t\t\tpreserveAspectRatio='none'\r\n\t\t\t\t{...props}\r\n\t\t\t>\r\n\t\t\t\t<path\r\n\t\t\t\t\ttransform={axis === 'y' ? 'rotate(90, 48, 48)' : ''}\r\n\t\t\t\t\td='M213.9 7.5c0 1.1 0 4.1.1 6.8.1 3.5-.3 4.9-1.4 5.3-.9.3-1.3 1-1 1.5.3.5-.2 1.2-1 1.5-.9.3-1.6 1.4-1.6 2.4 0 3.2-4.2 13-5.6 13-.9 0-1.4-1.7-1.6-5.3l-.3-5.2h-13l.3 5.1c.3 4 0 5.3-1.2 5.7-1 .4-1.6 1.9-1.6 4.2V46h-23v14H31v2.5c0 2 .5 2.5 2.5 2.5 1.6 0 2.5.6 2.5 1.5 0 1.3-2.3 1.5-14.5 1.5-16.4 0-15.9-.3-13 7.9 2.1 6.1 5.1 9.8 9.8 12.4l4.2 2.2 128.2.3L279 91l.6-2.7c1.4-6.4 3.9-13.2 7.3-19.8 2-3.9 3.7-7.3 3.9-7.7.2-.4-11.3-.9-25.5-1l-25.8-.3-.2-4c-.6-9.7-1.5-14.5-2.6-14.5-.9 0-1.1-1.3-.9-4l.4-4h-5c-3 0-5.4.5-5.9 1.3-.4.7-2 1.8-3.5 2.4-1.6.7-2.8 1.9-2.8 2.8 0 .8-.5 1.5-1.1 1.5-.7 0-1-3.3-1-9.8.1-12.3-.8-23.4-2-24.7-.6-.5-.9-.2-1 1z'\r\n\t\t\t\t/>\r\n\t\t\t</svg>\r\n\t\t</ContainerDiv>\r\n\t);\r\n}\r\n\r\nexport default CarrierIcon;\r\n","import * as React from 'react';\r\nimport ContainerDiv from './ContainerDiv';\r\n\r\nfunction BattleshipIcon(props) {\r\n\tconst { start, axis, ship_length, position, sunk } = props;\r\n\treturn (\r\n\t\t<ContainerDiv\r\n\t\t\tstart={start}\r\n\t\t\taxis={axis}\r\n\t\t\tship_length={ship_length}\r\n\t\t\tposition={position}\r\n\t\t>\r\n\t\t\t<svg\r\n\t\t\t\txmlns='http://www.w3.org/2000/svg'\r\n\t\t\t\twidth='100%'\r\n\t\t\t\theight='100%'\r\n\t\t\t\tviewBox={axis === 'x' ? '0 0 302 98' : '0 0 98 302'}\r\n\t\t\t\tfill={sunk === 'sunk' ? 'grey' : 'skyblue'}\r\n\t\t\t\tpreserveAspectRatio='none'\r\n\t\t\t\t{...props}\r\n\t\t\t>\r\n\t\t\t\t<path\r\n\t\t\t\t\ttransform={axis === 'y' ? 'rotate(90, 49, 49)' : ''}\r\n\t\t\t\t\td='M215 6.5c-.2 1.1-.2 2.3-.1 2.7 0 .4.3 2.5.7 4.7.6 3.4.4 4.1-1 4.1-1.3 0-1.6.5-1.1 2 .4 1.4.2 2-.8 2s-1.5 1.1-1.5 3.2c-.1 1.8-.9 5.8-2 8.8-1.8 5.2-2.1 5.5-5.5 5.8-2.8.2-3.6.8-3.9 2.5-.2 1.2-1 2.3-1.9 2.5-1.2.2-2.4-2.6-5.5-13.3L188.5 18h-4.2c-6.1 0-6.9 1.4-7.8 12.7-1 14.8-.8 14.3-7 14.3-4.8 0-5.4.3-5.8 2.2-.4 2-.4 1.9-.6-.5-.1-2-.6-2.7-2.1-2.7-1.4 0-2-.7-2-2.1 0-1.5-.5-2-2.2-1.7-1.6.2-2.2.9-2 2 .2 1-.2 1.8-.8 1.8-.5 0-1 1.1-1 2.5 0 2.4-.3 2.5-5.4 2.5-4.9 0-5.5.2-5.8 2.2-.2 1.5-1.1 2.4-2.5 2.6-1.5.2-2.3 1-2.3 2.3 0 1.8-.9 1.9-23.2 1.9-12.8 0-23.9-.4-24.7-.9-2.2-1.4 2-4.7 7.4-5.7 5-.9 6.9-2.9 4-4-.9-.4-2.1 0-2.8 1-.9 1.3-2.4 1.7-5.7 1.4-6.5-.5-6.4-2.8.2-2.9 8.1-.2 2-1.7-6.7-1.7-8.4 0-14.9 1.5-7.2 1.7 5.4.1 6 1.2 1.7 2.8-1.9.7-3 1.8-3 3.1 0 2.1 2.2 4.5 3.4 3.7.3-.3.2 0-.3.6-.5.7-5 .9-12.7.6-6.6-.3-13.5-.6-15.4-.6-2.7-.1-3.1-.3-2-1.1.8-.5 2.7-1 4.2-1 1.7 0 3.1-.8 3.8-2 .8-1.5 2.1-2 5.5-2 4.6 0 6.5-1.4 4.6-3.3-.9-.9-1.6-.8-3.1.1-2.4 1.4-11 1.6-11 .2 0-.6 2-1 4.5-1s4.5-.5 4.5-1c0-1.3-20.7-1.3-21.5-.1-.3.6 1.6 1.1 4.2 1.3 4.7.3 4.7.4 2 1.6-1.5.6-3 1.9-3.4 2.8-.7 2 1 5 2.7 4.6.6-.1.9.2.5.8-.3.5-3.7 1-7.6 1H33v2.9c0 2.4.5 3 2.5 3.3 1.4.2 2.5.7 2.5 1.3 0 .6-5.7 1.1-14.5 1.3-8 .1-14.5.6-14.5 1 0 .5.7 3.1 1.5 6 1.9 6.3 5.7 10.9 11 13.3 3.8 1.8 9.9 1.9 131 1.9h127l1.7-6.4c1.7-6.5 8.3-21.1 9.9-22.2 2.9-1.8-.5-2.4-13-2.4-11.7 0-14-.2-14.5-1.6-.9-2.4-.9-2.4 4.2-2.5l4.7-.2-6-.8c-10.6-1.6-13-1.7-15.2-1.2-2.2.5-3.3 3.3-1.3 3.3.6 0 1 .7 1 1.5 0 1.2-1.3 1.5-5.5 1.5H240v-5.3c0-7.3-1-12.7-2.4-12.7-.7 0-1-1.4-.8-4l.4-4h-4.6c-4.7 0-8.1 1.3-10.2 3.9-.9 1.2-1.3.5-1.9-3.6-.4-2.9-.4-6.1 0-7.2.4-1.4-.1-3.1-1.4-5-1.3-1.8-2.1-4.6-2.2-7.3 0-2.3-.4-5.2-.9-6.3l-.9-2-.1 2z'\r\n\t\t\t\t/>\r\n\t\t\t</svg>\r\n\t\t</ContainerDiv>\r\n\t);\r\n}\r\n\r\nexport default BattleshipIcon;\r\n","import * as React from 'react';\r\nimport ContainerDiv from './ContainerDiv';\r\n\r\nfunction DestroyerIcon(props) {\r\n\tconst { start, axis, ship_length, sunk } = props;\r\n\treturn (\r\n\t\t<ContainerDiv start={start} axis={axis} ship_length={ship_length}>\r\n\t\t\t<svg\r\n\t\t\t\txmlns='http://www.w3.org/2000/svg'\r\n\t\t\t\twidth='100%'\r\n\t\t\t\theight='100%'\r\n\t\t\t\tviewBox={axis === 'x' ? '0 0 153 69' : '0 0 69 153'}\r\n\t\t\t\tfill={sunk === 'sunk' ? 'grey' : 'skyblue'}\r\n\t\t\t\tpreserveAspectRatio='none'\r\n\t\t\t\t{...props}\r\n\t\t\t>\r\n\t\t\t\t<path\r\n\t\t\t\t\ttransform={axis === 'y' ? 'rotate(90, 35, 35)' : ''}\r\n\t\t\t\t\td='M53.6 20.4c-.5 2-1.3 2.5-4.4 2.8l-3.7.3-1 9.2c-.5 5-1.3 9.5-1.7 9.8-.4.4-2.5.4-4.7 0-3.9-.6-4.1-.9-4.1-4.1 0-2.8-.4-3.5-2.6-4-1.4-.4-3-.2-3.7.5-.6.6-2.5 1.1-4.2 1.2l-3 .1 3.3.9c1.9.6 3.2 1.6 3.2 2.6 0 1.4-1.2 1.5-10.5.9-5.8-.4-10.5-.5-10.5-.2s2.8 4.1 6.2 8.6l6.1 8h58.2c32.1 0 59.7-.3 61.4-.6 2.7-.6 3.1-1.1 3.1-3.8 0-2.6.5-3.4 2.7-4.2 2.5-.9 2.6-1 .9-2.6-1.1-1.2-3.3-1.8-6.2-1.8-4.2 0-5.9-1.2-3.1-2.3.6-.3.3-.6-.8-.7-1.7-.2-1.6-.3.5-.9 2.1-.7 1.7-.9-2.7-1.5-6.1-.9-7.3-.4-7.3 3 0 2.3-.2 2.4-7.5 2.4s-7.5-.1-7.5-2.5c0-2 .5-2.5 2.6-2.5 4.6 0 2-2.5-2.9-2.8-4.4-.3-4.7-.5-4.7-3.1 0-1.7-.7-3.1-1.6-3.5-2.5-1-6.2-.7-7 .5-.3.6-1.9.9-3.5.7-1.5-.3-2.6-.1-2.3.4.3.4 1.3.8 2.2.9 1.4 0 1.3.2-.3.9-1.7.7-1.7.9-.2.9.9.1 1.7.6 1.7 1.1 0 .7-2.2 1-5.7.8l-5.8-.3-.7-4.4c-.4-2.4-.9-4.5-1.1-4.7-.1-.2-2.2-.4-4.6-.6l-4.3-.3-1.7 5.3c-.9 3-2 5.3-2.5 5.3s-2-3.7-3.3-8.2c-1.3-4.5-2.6-8.6-2.9-9.1-.3-.4-2-.8-3.9-.8-2.6 0-3.4.5-3.9 2.4z'\r\n\t\t\t\t/>\r\n\t\t\t</svg>\r\n\t\t</ContainerDiv>\r\n\t);\r\n}\r\n\r\nexport default DestroyerIcon;\r\n","import * as React from 'react';\r\nimport ContainerDiv from './ContainerDiv';\r\n\r\nfunction SubmarineIcon(props) {\r\n\tconst { start, axis, ship_length, sunk } = props;\r\n\treturn (\r\n\t\t<ContainerDiv start={start} axis={axis} ship_length={ship_length}>\r\n\t\t\t<svg\r\n\t\t\t\txmlns='http://www.w3.org/2000/svg'\r\n\t\t\t\twidth='100%'\r\n\t\t\t\theight='100%'\r\n\t\t\t\tviewBox={axis === 'x' ? '0 0 302 98' : '0 0 98 302'}\r\n\t\t\t\tfill={sunk === 'sunk' ? 'grey' : 'skyblue'}\r\n\t\t\t\tpreserveAspectRatio='none'\r\n\t\t\t\t{...props}\r\n\t\t\t>\r\n\t\t\t\t<path\r\n\t\t\t\t\ttransform={axis === 'y' ? 'rotate(90, 49, 49)' : ''}\r\n\t\t\t\t\td='M147.3 20.7l.2 4.8-5.1-.3c-6.1-.4-6.9.4-7.8 7.8-.4 3-.9 7-1.2 8.7l-.6 3.3h-11.9c-7.4 0-12-.4-12.5-1.1-.4-.7-2.2-.9-4.8-.5-2.2.3-4.9.6-5.8.5-2.7-.1-10.6 0-12.5.1-1 0-3.3-.2-5.1-.6-1.9-.4-4.3-.2-5.5.4-1.2.6-4.8 1.3-8 1.6-7.7.6-13.8 4.2-16.5 9.7-1.2 2.3-1.9 4.6-1.6 5.1.3.4 49.8.8 110.1.8h109.5l-.6-2.7c-.5-1.7-.3-2.9.6-3.5 1.1-.6 1-1-.1-1.7-.9-.6-1.1-1.8-.7-3.5.6-2.5.5-2.6-3.9-2.6H259V30h-17.9l-1.5 5.2c-.8 2.9-2.1 7.4-2.8 10-1.3 5.2-1.7 5.4-9 4.2-2.8-.5-3.8-1.1-3.8-2.5 0-1.6-.8-1.9-5.1-1.9-3.5 0-5.5.5-6.3 1.5-1 1.4-2.4 1.4-10.1.6-5-.5-15.4-1.3-23.2-1.6l-14.2-.7-6.2-9.4c-4.1-6.3-6.8-9.4-8-9.4-1.6 0-1.9-.8-1.9-5 0-2.8-.4-5-1-5-.5 0-.9 2.1-.7 4.7z'\r\n\t\t\t\t/>\r\n\t\t\t</svg>\r\n\t\t</ContainerDiv>\r\n\t);\r\n}\r\n\r\nexport default SubmarineIcon;\r\n","import * as React from 'react';\r\nimport ContainerDiv from './ContainerDiv';\r\n\r\nfunction PatrolIcon(props) {\r\n\tconst { start, axis, ship_length, sunk } = props;\r\n\treturn (\r\n\t\t<ContainerDiv start={start} axis={axis} ship_length={ship_length}>\r\n\t\t\t<svg\r\n\t\t\t\txmlns='http://www.w3.org/2000/svg'\r\n\t\t\t\twidth='100%'\r\n\t\t\t\theight='100%'\r\n\t\t\t\tviewBox={axis === 'x' ? '0 0 112 60' : '0 0 60 112'}\r\n\t\t\t\tfill={sunk === 'sunk' ? 'grey' : 'skyblue'}\r\n\t\t\t\tpreserveAspectRatio='none'\r\n\t\t\t\t{...props}\r\n\t\t\t>\r\n\t\t\t\t<path\r\n\t\t\t\t\ttransform={axis === 'y' ? 'rotate(90, 30, 30)' : ''}\r\n\t\t\t\t\td='M59.9 6.7c0 .4 0 5.9.1 12 .1 9.3-.1 11.3-1.3 11.3-.8 0-1.7-.7-2.1-1.5-.9-2.5-8-1.9-11 .9-1.5 1.3-2.6 2.8-2.6 3.5 0 .8-4.9 1.1-16.5 1.1H10l.1 4.2c0 2.4.8 7.2 1.7 10.8l1.7 6.5 38.9.3c28.7.2 39.2-.1 40.3-1 1.4-1.1 8.7-13.2 9.9-16.2.5-1.3-.4-1.6-5.5-1.6h-6L90 32.9c-.7-2.3-.9-5.1-.6-6.2.3-1.3-.1-2.1-1.5-2.4-1-.3-1.9-1.3-1.9-2.2-.1-1.4-.2-1.4-1.4.1-1.7 2.3-9.6 2.5-9.6.3 0-.9-1-1.5-2.7-1.6l-2.8-.1 3-.7 3-.6-4.3-1.3c-5.1-1.6-6.2-1-6.2 2.9 0 1.7-.7 3.8-1.6 4.6-1.4 1.5-1.5.7-1.3-8.7.2-7.4 0-10.5-.9-10.8-.7-.2-1.2 0-1.3.5z'\r\n\t\t\t\t/>\r\n\t\t\t</svg>\r\n\t\t</ContainerDiv>\r\n\t);\r\n}\r\n\r\nexport default PatrolIcon;\r\n","import Carrier from '../components/icons/CarrierIcon';\r\nimport Battleship from '../components/icons/BattleshipIcon';\r\nimport Destroyer from '../components/icons/DestroyerIcon';\r\nimport Submarine from '../components/icons/SubmarineIcon';\r\nimport Patrol from '../components/icons/PatrolIcon';\r\n\r\nconst shipTypes = [\r\n\t{\r\n\t\tname: 'carrier',\r\n\t\tlength: 5,\r\n\t\tgetComponentWithProps: (props) => {\r\n\t\t\treturn (\r\n\t\t\t\t<Carrier\r\n\t\t\t\t\tkey={'carrier'}\r\n\t\t\t\t\tstart={props.start}\r\n\t\t\t\t\taxis={props.axis}\r\n\t\t\t\t\tship_length={5}\r\n\t\t\t\t\tsunk={props.sunk ? 'sunk' : ''}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\tname: 'battleship',\r\n\t\tlength: 4,\r\n\t\tgetComponentWithProps: (props) => {\r\n\t\t\treturn (\r\n\t\t\t\t<Battleship\r\n\t\t\t\t\tkey={'battleship'}\r\n\t\t\t\t\tstart={props.start}\r\n\t\t\t\t\taxis={props.axis}\r\n\t\t\t\t\tship_length={4}\r\n\t\t\t\t\tsunk={props.sunk ? 'sunk' : ''}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\tname: 'destroyer',\r\n\t\tlength: 3,\r\n\t\tgetComponentWithProps: (props) => {\r\n\t\t\treturn (\r\n\t\t\t\t<Destroyer\r\n\t\t\t\t\tkey={'destroyer'}\r\n\t\t\t\t\tstart={props.start}\r\n\t\t\t\t\taxis={props.axis}\r\n\t\t\t\t\tship_length={3}\r\n\t\t\t\t\tsunk={props.sunk ? 'sunk' : ''}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\tname: 'submarine',\r\n\t\tlength: 3,\r\n\t\tgetComponentWithProps: (props) => {\r\n\t\t\treturn (\r\n\t\t\t\t<Submarine\r\n\t\t\t\t\tkey={'submarine'}\r\n\t\t\t\t\tstart={props.start}\r\n\t\t\t\t\taxis={props.axis}\r\n\t\t\t\t\tship_length={3}\r\n\t\t\t\t\tsunk={props.sunk ? 'sunk' : ''}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\tname: 'patrol boat',\r\n\t\tlength: 2,\r\n\t\tgetComponentWithProps: (props) => {\r\n\t\t\treturn (\r\n\t\t\t\t<Patrol\r\n\t\t\t\t\tkey={'patrol-boat'}\r\n\t\t\t\t\tstart={props.start}\r\n\t\t\t\t\taxis={props.axis}\r\n\t\t\t\t\tship_length={2}\r\n\t\t\t\t\tsunk={props.sunk ? 'sunk' : ''}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t},\r\n\t},\r\n];\r\n\r\nexport default shipTypes;\r\n","import {\r\n\tGameBoardGrid,\r\n\tCell,\r\n\tSetupGridContainer,\r\n} from '../styled_components/gameControllerStyles';\r\nimport React, { useState, useContext } from 'react';\r\nimport shipTypes from '../../game_helpers/shipTypes';\r\nimport { store } from '../../GameController';\r\n\r\nfunction CellSelectorGrid({ handlePlaceShip, currentShip, axis }) {\r\n\tconst { state } = useContext(store);\r\n\tconst { timeline } = state;\r\n\tconst player = state.players.human;\r\n\tconst playerBoard = player.gameBoard;\r\n\tconst [hovered, setHovered] = useState([]);\r\n\r\n\tconst mouseEnterHandler = (index, board) => {\r\n\t\t// this makes the cells where the ship will be placed highlighted, unless\r\n\t\t// that placement is invalid. Disabled when the game starts.\r\n\t\tif (timeline === 'setup') {\r\n\t\t\tconst shipLength = shipTypes[currentShip].length;\r\n\t\t\tconst locations = [];\r\n\t\t\tfor (let i = 0; i < shipLength; i++) {\r\n\t\t\t\taxis === 'x'\r\n\t\t\t\t\t? locations.push(index + i)\r\n\t\t\t\t\t: locations.push(index + i * 10);\r\n\t\t\t}\r\n\t\t\tif (board.checkCollisions(locations)) {\r\n\t\t\t\tsetHovered(locations);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst mouseLeaveHandler = () => {\r\n\t\tsetHovered([]);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<SetupGridContainer>\r\n\t\t\t<GameBoardGrid>\r\n\t\t\t\t{playerBoard.board.map((cell, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Cell\r\n\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\thighlight={hovered.includes(index)}\r\n\t\t\t\t\t\t\tcursor={hovered.includes(index) ? 'pointer' : 'not-allowed'}\r\n\t\t\t\t\t\t\ttimeline={timeline}\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\thandlePlaceShip(index);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tonMouseEnter={() => {\r\n\t\t\t\t\t\t\t\tmouseEnterHandler(index, playerBoard);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tonMouseLeave={() => {\r\n\t\t\t\t\t\t\t\tmouseLeaveHandler(index, timeline);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</GameBoardGrid>\r\n\t\t</SetupGridContainer>\r\n\t);\r\n}\r\n\r\nexport default CellSelectorGrid;\r\n","import shipTypes from '../game_helpers/shipTypes';\r\n\r\nclass Ship {\r\n\tconstructor(name, position) {\r\n\t\tthis.name = name;\r\n\t\tthis.position = position;\r\n\t\tthis.hits = [];\r\n\t}\r\n\thit(index) {\r\n\t\tthis.hits.push(index);\r\n\t}\r\n\tisSunk() {\r\n\t\treturn this.position.every((occupiedCell) =>\r\n\t\t\tthis.hits.includes(occupiedCell)\r\n\t\t);\r\n\t}\r\n\tgetComponentWithProps(props) {\r\n\t\treturn shipTypes\r\n\t\t\t.find((ship) => ship.name === this.name)\r\n\t\t\t.getComponentWithProps(props);\r\n\t}\r\n}\r\n\r\nexport default Ship;\r\n","import shipTypes from './shipTypes';\r\nimport Ship from '../factories/shipFactory';\r\n\r\nfunction placePlayerShip({ player, locationArray, currentShip, dispatch }) {\r\n\tconst { gameBoard } = player;\r\n\tconst ship = new Ship(shipTypes[currentShip].name, locationArray);\r\n\r\n\tif (\r\n\t\t// returns true if there are NO collisions\r\n\t\tgameBoard.checkCollisions(locationArray)\r\n\t) {\r\n\t\t// update board state\r\n\t\tdispatch({\r\n\t\t\ttype: 'SET_SHIP_ON_BOARD',\r\n\t\t\tpayload: {\r\n\t\t\t\tlocationArray,\r\n\t\t\t\tplayer: 'human',\r\n\t\t\t\tship: ship,\r\n\t\t\t},\r\n\t\t});\r\n\t\t// update ship state\r\n\t\tdispatch({\r\n\t\t\ttype: 'SET_SHIPS',\r\n\t\t\tpayload: {\r\n\t\t\t\tships: [...player.ships, ship],\r\n\t\t\t\tplayer: 'human',\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport default placePlayerShip;\r\n","import shipTypes from './shipTypes';\r\nimport Ship from '../factories/shipFactory';\r\nimport Gameboard from '../factories/gameboardFactory';\r\n\r\nfunction placeComputerShips(dispatch, gameBoard) {\r\n\t// create a temporary board to check collisions and use single dispatch\r\n\t// we pass in our own board so we can use the methods on the class\r\n\tconst tempBoard = new Gameboard(gameBoard.board);\r\n\tconst ships = [];\r\n\r\n\tshipTypes.forEach((shipType) => {\r\n\t\tconst ship = new Ship(\r\n\t\t\tshipType.name,\r\n\t\t\ttempBoard.findRandomShipLocation(shipType)\r\n\t\t);\r\n\t\tship.position.forEach((pos) => (tempBoard.board[pos].hasShip = ship.name));\r\n\t\tships.push(ship);\r\n\t});\r\n\r\n\t// update board state\r\n\tdispatch({\r\n\t\ttype: 'SET_BOARD',\r\n\t\tpayload: {\r\n\t\t\tplayer: 'computer',\r\n\t\t\tboard: tempBoard.board,\r\n\t\t},\r\n\t});\r\n\t// update ship state\r\n\tdispatch({\r\n\t\ttype: 'SET_SHIPS',\r\n\t\tpayload: {\r\n\t\t\tships,\r\n\t\t\tplayer: 'computer',\r\n\t\t},\r\n\t});\r\n}\r\n\r\nexport default placeComputerShips;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport {\r\n\tSetupWindow,\r\n\tSetupTitle,\r\n\tAxisButton,\r\n\tGridOverlayContainer,\r\n} from '../styled_components/gameControllerStyles';\r\nimport ShipPlacementGrid from './ShipPlacementGrid';\r\nimport CellSelectorGrid from './CellSelectorGrid';\r\nimport shipTypes from '../../game_helpers/shipTypes';\r\nimport placePlayerShip from '../../game_helpers/placePlayerShip';\r\nimport placeComputerShips from '../../game_helpers/placeComputerShips';\r\nimport { store } from '../../GameController';\r\n\r\nfunction GameSetup({ dismount, setDismount, fadeOutMusic }) {\r\n\tconst { state, dispatch } = useContext(store);\r\n\tconst { players } = state;\r\n\tconst [currentShip, setCurrentShip] = useState(0);\r\n\tconst [axis, setAxis] = useState('x');\r\n\tconst [loading, setLoading] = useState(true);\r\n\r\n\t// using a new loading state to avoid race conditions between the render\r\n\t// and setDismount. this causes the animation to load incorrectly.\r\n\t// this method allows the component to always render with\r\n\t// the animation starting from being completely faded\r\n\tuseEffect(() => {\r\n\t\tif (loading) {\r\n\t\t\tsetDismount(false);\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t}, [setDismount, loading]);\r\n\r\n\tconst handleAnimationEnd = () => {\r\n\t\t// allow for the fadeout\r\n\t\tif (dismount) {\r\n\t\t\tdispatch({ type: 'SET_TIMELINE', payload: 'game start' });\r\n\t\t}\r\n\t};\r\n\r\n\tconst handlePlaceShip = (location) => {\r\n\t\tconst { gameBoard } = players.human;\r\n\t\tconst locationArray = gameBoard.createLocationArray(\r\n\t\t\tlocation,\r\n\t\t\tshipTypes[currentShip],\r\n\t\t\taxis\r\n\t\t);\r\n\t\t// returns true if there are no collisions\r\n\t\tif (gameBoard.checkCollisions(locationArray)) {\r\n\t\t\tplacePlayerShip({\r\n\t\t\t\tplayer: players.human,\r\n\t\t\t\tlocationArray,\r\n\t\t\t\tcurrentShip,\r\n\t\t\t\tdispatch,\r\n\t\t\t});\r\n\t\t\t// check if this is the last ship to be placed\r\n\t\t\tif (currentShip >= 4) {\r\n\t\t\t\tfadeOutMusic();\r\n\t\t\t\t// Computer will place ships\r\n\t\t\t\tplaceComputerShips(dispatch, state.players.computer.gameBoard);\r\n\t\t\t\tsetDismount(true);\r\n\t\t\t} else {\r\n\t\t\t\tsetCurrentShip(currentShip + 1);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t!loading && (\r\n\t\t\t<SetupWindow\r\n\t\t\t\tonAnimationEnd={handleAnimationEnd}\r\n\t\t\t\tstyle={{ animation: dismount ? 'fadeout 2s' : 'fadein 2s' }}\r\n\t\t\t>\r\n\t\t\t\t<SetupTitle>\r\n\t\t\t\t\t{players.human.name}, Place Your {shipTypes[currentShip].name}:\r\n\t\t\t\t</SetupTitle>\r\n\t\t\t\t<AxisButton onClick={() => setAxis(axis === 'x' ? 'y' : 'x')}>\r\n\t\t\t\t\tAXIS: {axis}\r\n\t\t\t\t</AxisButton>\r\n\t\t\t\t<GridOverlayContainer>\r\n\t\t\t\t\t{/* for ship placement */}\r\n\t\t\t\t\t<ShipPlacementGrid />\r\n\t\t\t\t\t{/* cells for click handlers */}\r\n\t\t\t\t\t<CellSelectorGrid\r\n\t\t\t\t\t\tcurrentShip={currentShip}\r\n\t\t\t\t\t\taxis={axis}\r\n\t\t\t\t\t\thandlePlaceShip={handlePlaceShip}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</GridOverlayContainer>\r\n\t\t\t</SetupWindow>\r\n\t\t)\r\n\t);\r\n}\r\n\r\nexport default GameSetup;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ShotCell = styled.div`\r\n\tdisplay: flex;\r\n\theight: 100%;\r\n\twidth: 100%;\r\n\t& > * {\r\n\t\tmargin: auto;\r\n\t}\r\n`;\r\n\r\nfunction ShotMarker(props) {\r\n\tconst { hit } = props;\r\n\treturn (\r\n\t\t<ShotCell>\r\n\t\t\t<svg\r\n\t\t\t\twidth={16}\r\n\t\t\t\theight={16}\r\n\t\t\t\tfill={hit ? 'red' : 'white'}\r\n\t\t\t\txmlns='http://www.w3.org/2000/svg'\r\n\t\t\t\t{...props}\r\n\t\t\t>\r\n\t\t\t\t<circle cx={8} cy={8} r={8} />\r\n\t\t\t</svg>\r\n\t\t</ShotCell>\r\n\t);\r\n}\r\n\r\nexport default ShotMarker;\r\n","function computerAI(player) {\r\n\tconst playerBoard = player.gameBoard;\r\n\t// create a version of the gameboard with only available shots\r\n\tconst availableShots = [];\r\n\tlet unsunkShots = [];\r\n\tplayerBoard.opponentBoard().forEach((loc, index) => {\r\n\t\t// get all available shots\r\n\t\tif (loc === 'empty') {\r\n\t\t\tavailableShots.push(index);\r\n\t\t} else if (loc === 'hit') {\r\n\t\t\t// get all hits on board to test if we can find the rest of the ship\r\n\t\t\tunsunkShots.push(index);\r\n\t\t}\r\n\t});\r\n\r\n\t// filter out the shots that have sunk ships\r\n\tunsunkShots = unsunkShots.filter((cell) => {\r\n\t\tconst hitShip = player.ships.find((ship) => ship.position.includes(cell));\r\n\t\treturn !hitShip.isSunk();\r\n\t});\r\n\r\n\t// DETECT SHIPS\r\n\t// locate any two shots that resemble a ship\r\n\tlet detectedShip = unsunkShots.filter((shot, index, thisArray) => {\r\n\t\treturn (\r\n\t\t\t(thisArray.includes(shot + 1) && (shot - 9) % 10 !== 0) ||\r\n\t\t\t(thisArray.includes(shot - 1) && shot % 10 !== 0) ||\r\n\t\t\tthisArray.includes(shot + 10) ||\r\n\t\t\tthisArray.includes(shot - 10)\r\n\t\t);\r\n\t});\r\n\r\n\t// remove doubles\r\n\tdetectedShip = detectedShip.filter((cell, i, thisArray) => {\r\n\t\treturn thisArray.lastIndexOf(cell) === i;\r\n\t});\r\n\r\n\tif (detectedShip.length) {\r\n\t\tconst axis = detectedShip[1] - detectedShip[0] === 1 ? 'x' : 'y';\r\n\t\tconst possibleShots = [];\r\n\t\tif (axis === 'x') {\r\n\t\t\t// add the cell to the left unless in the first column\r\n\t\t\tif (detectedShip[0] % 10 !== 0) possibleShots.push(detectedShip[0] - 1);\r\n\t\t\t// add the cell to the right unless in the last column\r\n\t\t\tconst furthestRight = detectedShip.find(\r\n\t\t\t\t(cell, index, thisArray) => !thisArray.includes(cell + 1)\r\n\t\t\t);\r\n\t\t\tif ((furthestRight - 9) % 10 !== 0)\r\n\t\t\t\tpossibleShots.push(furthestRight + 1);\r\n\t\t} else {\r\n\t\t\t// add the cell above\r\n\t\t\tpossibleShots.push(detectedShip[0] - 10);\r\n\t\t\t// add the cell below\r\n\t\t\tpossibleShots.push(\r\n\t\t\t\tdetectedShip.find((cell, index, thisArray) => {\r\n\t\t\t\t\treturn index !== 0 && !thisArray.includes(cell + 10);\r\n\t\t\t\t}) + 10\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\t// remove any that don't exist as available shots, either off the board\r\n\t\t// or already shot\r\n\t\tconst filteredPossibleShots = possibleShots.filter((shot) =>\r\n\t\t\tavailableShots.includes(shot)\r\n\t\t);\r\n\t\tif (filteredPossibleShots.length) {\r\n\t\t\treturn filteredPossibleShots[\r\n\t\t\t\tMath.floor(Math.random() * filteredPossibleShots.length)\r\n\t\t\t];\r\n\t\t}\r\n\t}\r\n\r\n\t// TARGET SOLO MARKER\r\n\tif (unsunkShots.length) {\r\n\t\tconst firstUnsunkShot = unsunkShots[0];\r\n\t\tconst soloShotChoices = [\r\n\t\t\tfirstUnsunkShot + 1,\r\n\t\t\tfirstUnsunkShot - 1,\r\n\t\t\tfirstUnsunkShot + 10,\r\n\t\t\tfirstUnsunkShot - 10,\r\n\t\t];\r\n\t\tconst filteredSoloShots = soloShotChoices.filter((shot) => {\r\n\t\t\t// if this shot carries over to next row, ignore it\r\n\t\t\tif (firstUnsunkShot % 10 === 0) {\r\n\t\t\t\treturn (shot - 9) % 10 !== 0 && availableShots.includes(shot);\r\n\t\t\t} else if ((firstUnsunkShot - 9) % 10 === 0) {\r\n\t\t\t\treturn shot % 10 !== 0 && availableShots.includes(shot);\r\n\t\t\t}\r\n\t\t\treturn availableShots.includes(shot);\r\n\t\t});\r\n\t\tif (filteredSoloShots.length) {\r\n\t\t\treturn filteredSoloShots[\r\n\t\t\t\tMath.floor(Math.random() * filteredSoloShots.length)\r\n\t\t\t];\r\n\t\t}\r\n\t}\r\n\r\n\t// NOTHING DETECTED, FIRE RANDOMLY\r\n\t// return a random shot\r\n\treturn availableShots[Math.floor(Math.random() * availableShots.length)];\r\n}\r\n\r\nexport default computerAI;\r\n","import computerAI from './computerAI';\r\n\r\nfunction computerTurn({\r\n\tplayerBoard,\r\n\tsetShotTimeout,\r\n\tcheckWinner,\r\n\tcomputer,\r\n\tdispatch,\r\n\tplayers,\r\n\tplaySound,\r\n}) {\r\n\t// initialize mutable sound variable, allow outcomes to mutate\r\n\tlet sound;\r\n\t// prevent from running when locked for win conditions\r\n\tif (!checkWinner(players)) {\r\n\t\t// computer waits for its turn, then fires\r\n\t\t// a little fake immersion\r\n\t\tsetTimeout(() => {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: 'SET_MESSAGE',\r\n\t\t\t\tpayload: 'Your opponent is aiming...',\r\n\t\t\t});\r\n\t\t}, 1000);\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tplaySound('fireShot');\r\n\t\t\tconst shotLocation = computerAI(players.human);\r\n\t\t\tif (playerBoard.checkIfShotHit(shotLocation)) {\r\n\t\t\t\tsound = 'shotHit';\r\n\t\t\t\tconst newShips = { ...players.human }.ships;\r\n\t\t\t\tconst hitShip = newShips.find(\r\n\t\t\t\t\t(ship) => ship.name === playerBoard.checkIfShotHit(shotLocation)\r\n\t\t\t\t);\r\n\t\t\t\thitShip.hit(shotLocation);\r\n\t\t\t\t// update hits on human ships\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: 'SET_SHIP_HITS',\r\n\t\t\t\t\tpayload: { player: 'human', ship: hitShip, hits: hitShip.hits },\r\n\t\t\t\t});\r\n\t\t\t\tif (hitShip.isSunk()) {\r\n\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\ttype: 'SET_MESSAGE',\r\n\t\t\t\t\t\tpayload: `The enemy fires a shot into your waters ...... they sunk your ${hitShip.name}!`,\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\ttype: 'SET_MESSAGE',\r\n\t\t\t\t\t\tpayload:\r\n\t\t\t\t\t\t\t\"The enemy fires a shot into your waters ...... it's a hit!\",\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tsound = 'shotMiss';\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: 'SET_MESSAGE',\r\n\t\t\t\t\tpayload: 'The enemy fires a shot into your waters ...... and misses.',\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t// fire on that spot after message populates\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tplaySound(sound);\r\n\t\t\t\tcomputer.fireShot(shotLocation, playerBoard);\r\n\t\t\t\tdispatch({ type: 'SET_TURN', payload: 0 });\r\n\t\t\t\tsetShotTimeout(false);\r\n\t\t\t}, 1800);\r\n\t\t}, 2600);\r\n\t}\r\n}\r\n\r\nexport default computerTurn;\r\n","function checkWinner({ human, computer }) {\r\n\tconst stillPlaying = [human, computer].filter(\r\n\t\t(player) => !player.ships.every((ship) => ship.isSunk())\r\n\t);\r\n\treturn stillPlaying.length === 1 ? stillPlaying[0] : false;\r\n}\r\n\r\nexport default checkWinner;\r\n","// callback refers to the computer turn, so that it only executes when this function completes\r\nfunction humanTurn(\r\n\t{ dispatch, index, computer, computerTurn, players, checkWinner, playSound },\r\n\tcomputerTurnArgs\r\n) {\r\n\t// don't allow if there's a winner\r\n\tif (!checkWinner(players)) {\r\n\t\t// initialize mutable sound variable, allow outcomes to mutate\r\n\t\tlet sound;\r\n\t\tconst computerBoard = computer.gameBoard;\r\n\t\tplaySound('fireShot');\r\n\t\tsetTimeout(() => {\r\n\t\t\tif (computerBoard.checkIfShotHit(index)) {\r\n\t\t\t\tsound = 'shotHit';\r\n\t\t\t\tconst newShips = [...computer.ships];\r\n\t\t\t\tconst hitShip = newShips.find(\r\n\t\t\t\t\t(ship) => ship.name === computerBoard.checkIfShotHit(index)\r\n\t\t\t\t);\r\n\t\t\t\thitShip.hit(index);\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: 'SET_SHIP_HITS',\r\n\t\t\t\t\tpayload: { player: 'computer', ship: hitShip, hits: hitShip.hits },\r\n\t\t\t\t});\r\n\t\t\t\tif (hitShip.isSunk()) {\r\n\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\ttype: 'SET_MESSAGE',\r\n\t\t\t\t\t\tpayload: `You fire a shot into enemy waters ...... you sunk their ${hitShip.name}!`,\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\ttype: 'SET_MESSAGE',\r\n\t\t\t\t\t\tpayload: \"You fire a shot into enemy waters ...... it's a hit!\",\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tsound = 'shotMiss';\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: 'SET_MESSAGE',\r\n\t\t\t\t\tpayload: 'You fire a shot into enemy waters ...... and miss.',\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}, 0);\r\n\t\t// give time for message to populate\r\n\t\tsetTimeout(() => {\r\n\t\t\tplaySound(sound);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: 'FIRE_SHOT',\r\n\t\t\t\tpayload: { player: 'human', location: index },\r\n\t\t\t});\r\n\t\t\tdispatch({ type: 'SET_TURN', payload: 1 });\r\n\t\t\tcomputerTurn({\r\n\t\t\t\t...computerTurnArgs,\r\n\t\t\t});\r\n\t\t}, 1700);\r\n\t}\r\n}\r\n\r\nexport default humanTurn;\r\n","import React, { useContext, useState } from 'react';\r\nimport {\r\n\tGameBoardGrid,\r\n\tCell,\r\n\tSetupGridContainer,\r\n\tWatersContainer,\r\n} from '../styled_components/gameControllerStyles';\r\nimport findShipPlacement from '../../game_helpers/findShipPlacement';\r\nimport ShotMarker from '../icons/ShotMarker';\r\nimport computerTurn from '../../game_helpers/computerTurn';\r\nimport checkWinner from '../../game_helpers/checkWinner';\r\nimport humanTurn from '../../game_helpers/humanTurn';\r\nimport { store } from '../../GameController';\r\n\r\nfunction EnemyWatersGrid({ playSound }) {\r\n\tconst { state, dispatch } = useContext(store);\r\n\tconst { turn, winner } = state;\r\n\tconst [shotTimeout, setShotTimeout] = useState(false);\r\n\tconst { players } = state;\r\n\tconst computer = players.computer;\r\n\tconst computerBoard = computer.gameBoard;\r\n\tconst playerBoard = players.human.gameBoard;\r\n\r\n\tconst handlePlayerShot = (index) => {\r\n\t\tif (!shotTimeout && !winner) {\r\n\t\t\t// ignore shots while HUD is sending message\r\n\t\t\tsetShotTimeout(true);\r\n\t\t\t// clear message HUD\r\n\t\t\tdispatch({ type: 'RESET_MESSAGE' });\r\n\t\t\thumanTurn(\r\n\t\t\t\t{\r\n\t\t\t\t\tdispatch,\r\n\t\t\t\t\tindex,\r\n\t\t\t\t\tcomputer,\r\n\t\t\t\t\tcomputerTurn,\r\n\t\t\t\t\tplayers,\r\n\t\t\t\t\tcheckWinner,\r\n\t\t\t\t\tplaySound,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tplayerBoard,\r\n\t\t\t\t\tsetShotTimeout,\r\n\t\t\t\t\tcheckWinner,\r\n\t\t\t\t\tcomputer,\r\n\t\t\t\t\tdispatch,\r\n\t\t\t\t\tplayers,\r\n\t\t\t\t\tplaySound,\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\t// create a map to populate the grid\r\n\tconst fillCells = () => {\r\n\t\tlet arr = [];\r\n\t\tfor (let i = 0; i < 100; i++) {\r\n\t\t\tarr.push([i]);\r\n\t\t}\r\n\t\treturn computerBoard.opponentBoard().map((cell, index) => {\r\n\t\t\treturn (\r\n\t\t\t\t<Cell\r\n\t\t\t\t\tkey={index}\r\n\t\t\t\t\tboard='enemy'\r\n\t\t\t\t\tcursor={cell === 'empty' ? 'crosshair' : 'not-allowed'}\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tif (turn === 0 && cell === 'empty') {\r\n\t\t\t\t\t\t\thandlePlayerShot(index);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tshot={cell !== 'empty'}\r\n\t\t\t\t>\r\n\t\t\t\t\t{cell !== 'empty' && <ShotMarker hit={cell === 'hit' ? 'hit' : ''} />}\r\n\t\t\t\t</Cell>\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<WatersContainer row='3'>\r\n\t\t\t<SetupGridContainer>\r\n\t\t\t\t<GameBoardGrid>\r\n\t\t\t\t\t{computer.ships.map((ship) => {\r\n\t\t\t\t\t\tif (ship.isSunk()) {\r\n\t\t\t\t\t\t\tconst placement = findShipPlacement(ship, computerBoard.board);\r\n\t\t\t\t\t\t\tconst shipProps = {\r\n\t\t\t\t\t\t\t\tstart: placement.start,\r\n\t\t\t\t\t\t\t\taxis: placement.axis,\r\n\t\t\t\t\t\t\t\tsunk: ship.isSunk(),\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\treturn ship.getComponentWithProps(shipProps);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})}\r\n\t\t\t\t</GameBoardGrid>\r\n\t\t\t</SetupGridContainer>\r\n\t\t\t<SetupGridContainer>\r\n\t\t\t\t<GameBoardGrid>{fillCells()}</GameBoardGrid>\r\n\t\t\t</SetupGridContainer>\r\n\t\t</WatersContainer>\r\n\t);\r\n}\r\n\r\nexport default EnemyWatersGrid;\r\n","import findShipPlacement from '../../game_helpers/findShipPlacement';\r\nimport {\r\n\tGameBoardGrid,\r\n\tCell,\r\n\tSetupGridContainer,\r\n\tWatersContainer,\r\n} from '../styled_components/gameControllerStyles';\r\nimport React, { useContext } from 'react';\r\nimport ShotMarker from '../icons/ShotMarker';\r\nimport { store } from '../../GameController';\r\n\r\nfunction FriendlyWatersGrid() {\r\n\tconst { state } = useContext(store);\r\n\tconst { timeline } = state;\r\n\tconst { ships, gameBoard } = state.players.human;\r\n\tconst { board } = gameBoard;\r\n\r\n\tconst fillCells = () => {\r\n\t\tlet arr = [];\r\n\t\tfor (let i = 0; i < 100; i++) {\r\n\t\t\tarr.push([i]);\r\n\t\t}\r\n\t\treturn gameBoard.opponentBoard().map((cell, index) => {\r\n\t\t\treturn (\r\n\t\t\t\t<Cell key={index} timeline={timeline} board='friendly' cursor={''}>\r\n\t\t\t\t\t{cell !== 'empty' && <ShotMarker hit={cell === 'hit' ? 'hit' : ''} />}\r\n\t\t\t\t</Cell>\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<WatersContainer row='5'>\r\n\t\t\t<SetupGridContainer>\r\n\t\t\t\t<GameBoardGrid>\r\n\t\t\t\t\t{ships.map((ship) => {\r\n\t\t\t\t\t\tif (findShipPlacement(ship, board)) {\r\n\t\t\t\t\t\t\tconst placement = findShipPlacement(ship, board);\r\n\t\t\t\t\t\t\tconst shipProps = {\r\n\t\t\t\t\t\t\t\tstart: placement.start,\r\n\t\t\t\t\t\t\t\taxis: placement.axis,\r\n\t\t\t\t\t\t\t\tsunk: ship.isSunk(),\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\treturn ship.getComponentWithProps(shipProps);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})}\r\n\t\t\t\t</GameBoardGrid>\r\n\t\t\t</SetupGridContainer>\r\n\t\t\t<SetupGridContainer>\r\n\t\t\t\t<GameBoardGrid>{fillCells()}</GameBoardGrid>\r\n\t\t\t</SetupGridContainer>\r\n\t\t</WatersContainer>\r\n\t);\r\n}\r\n\r\nexport default FriendlyWatersGrid;\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport { store } from '../../GameController';\r\nimport {\r\n\tGameStartContainer,\r\n\tHudWindow,\r\n\tLabelContainer,\r\n} from '../styled_components/gameControllerStyles';\r\nimport EnemyWatersGrid from './EnemyWatersGrid';\r\nimport FriendlyWatersGrid from './FriendlyWatersGrid';\r\nimport checkWinner from '../../game_helpers/checkWinner';\r\n\r\nfunction GameStart({ setDismount, playBgSound, playSound }) {\r\n\tconst { state, dispatch } = useContext(store);\r\n\tconst { message } = state;\r\n\tconst [hudMessage, setHudMessage] = useState('');\r\n\r\n\tuseEffect(() => {\r\n\t\tif (checkWinner(state.players)) {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: 'SET_WINNER',\r\n\t\t\t\t\tpayload: checkWinner(state.players).name,\r\n\t\t\t\t});\r\n\t\t\t}, 2500);\r\n\t\t}\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\t// set dismount animation check in case of another playthrough\r\n\t\tsetDismount(false);\r\n\t}, [setDismount]);\r\n\r\n\tuseEffect(() => {\r\n\t\t// trigger type effect for messages if state changes\r\n\t\tif (message) handleHudSet(message);\r\n\t}, [message]);\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'SET_MESSAGE',\r\n\t\t\tpayload: `Awaiting orders, Admiral ${state.players.human.name}`,\r\n\t\t});\r\n\t}, [dispatch, state.players.human.name]);\r\n\r\n\tuseEffect(() => {\r\n\t\tplayBgSound('bgSound', 0.7);\r\n\t}, [playBgSound]);\r\n\r\n\tconst handleHudSet = (message) => {\r\n\t\tsetHudMessage('');\r\n\t\tconst messageArray = message.split('');\r\n\t\tlet counter = 0;\r\n\t\tconst messageDisplay = [];\r\n\t\tconst typingMessageEmulator = setInterval(() => {\r\n\t\t\tmessageDisplay.push(messageArray[counter]);\r\n\t\t\tsetHudMessage(messageDisplay.join(''));\r\n\t\t\tcounter++;\r\n\t\t\tif (counter >= messageArray.length) clearInterval(typingMessageEmulator);\r\n\t\t}, 30);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<GameStartContainer>\r\n\t\t\t\t<HudWindow>\r\n\t\t\t\t\t<p style={{ margin: 'auto' }}>{hudMessage}</p>\r\n\t\t\t\t</HudWindow>\r\n\t\t\t\t<LabelContainer row='4'>\r\n\t\t\t\t\t<h1 style={{ margin: 'auto auto 0' }}>Friendly waters</h1>\r\n\t\t\t\t</LabelContainer>\r\n\t\t\t\t<LabelContainer row='2'>\r\n\t\t\t\t\t<h1 style={{ margin: 'auto auto 0' }}>Enemy waters</h1>\r\n\t\t\t\t</LabelContainer>\r\n\t\t\t\t<FriendlyWatersGrid />\r\n\t\t\t\t<EnemyWatersGrid playSound={playSound} />\r\n\t\t\t</GameStartContainer>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default GameStart;\r\n","import styled from 'styled-components';\r\n\r\nconst WinnerContainer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tmargin: 3rem auto;\r\n\tmax-width: 50rem;\r\n`;\r\n\r\nconst WinnerTitle = styled.h1`\r\n\tfont-size: 7rem;\r\n\t@media (max-width: 800px) {\r\n\t\tfont-size: 4rem;\r\n\t}\r\n`;\r\n\r\nconst WinnerName = styled.h1`\r\n\tfont-size: 10rem;\r\n\tanimation: fadeinslow 5s;\r\n\t@media (max-width: 800px) {\r\n\t\tfont-size: 6rem;\r\n\t}\r\n`;\r\n\r\nconst WinnerButton = styled.button`\r\n\tpadding: 1.5rem;\r\n\ttext-align: center;\r\n\tmargin: auto;\r\n\tfont-size: 2rem;\r\n`;\r\n\r\nexport { WinnerContainer, WinnerTitle, WinnerName, WinnerButton };\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { store } from '../../GameController';\r\nimport {\r\n\tWinnerContainer,\r\n\tWinnerTitle,\r\n\tWinnerName,\r\n\tWinnerButton,\r\n} from '../styled_components/winnerStyles';\r\n\r\nfunction WinnerScreen({ playBgSound }) {\r\n\tconst { state, dispatch } = useContext(store);\r\n\tconst handleClick = () => {\r\n\t\tdispatch({ type: 'RESET_GAME' });\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tplayBgSound('music');\r\n\t});\r\n\r\n\treturn (\r\n\t\t<WinnerContainer>\r\n\t\t\t<WinnerTitle>The winner is:</WinnerTitle>\r\n\t\t\t<WinnerName>{state.winner}</WinnerName>\r\n\t\t\t<WinnerButton onClick={handleClick}>Play Again</WinnerButton>\r\n\t\t</WinnerContainer>\r\n\t);\r\n}\r\n\r\nexport default WinnerScreen;\r\n","export default __webpack_public_path__ + \"static/media/music.73164409.mp3\";","export default __webpack_public_path__ + \"static/media/background_sound.3cdc6e71.mp3\";","export default __webpack_public_path__ + \"static/media/fire_shot.e38f5946.mp3\";","export default __webpack_public_path__ + \"static/media/shot_hit.96a50b26.mp3\";","export default __webpack_public_path__ + \"static/media/shot_miss.058afc20.mp3\";","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const SVG = styled.svg`\r\n\ttransition: 0.5s;\r\n\t&:hover {\r\n\t\tfill: black;\r\n\t\ttransition: 0.5s;\r\n\t}\r\n`;\r\n\r\nfunction SvgGithub(props) {\r\n\treturn (\r\n\t\t<a href='https://github.com/langhamerm'>\r\n\t\t\t<SVG\r\n\t\t\t\txmlns='http://www.w3.org/2000/svg'\r\n\t\t\t\tviewBox='0 0 512 512'\r\n\t\t\t\theight='2rem'\r\n\t\t\t\twidth='2rem'\r\n\t\t\t\tfill='#555'\r\n\t\t\t\t{...props}\r\n\t\t\t>\r\n\t\t\t\t<path d='M255.968 5.329C114.624 5.329 0 120.401 0 262.353c0 113.536 73.344 209.856 175.104 243.872 12.8 2.368 17.472-5.568 17.472-12.384 0-6.112-.224-22.272-.352-43.712-71.2 15.52-86.24-34.464-86.24-34.464-11.616-29.696-28.416-37.6-28.416-37.6-23.264-15.936 1.728-15.616 1.728-15.616 25.696 1.824 39.2 26.496 39.2 26.496 22.848 39.264 59.936 27.936 74.528 21.344 2.304-16.608 8.928-27.936 16.256-34.368-56.832-6.496-116.608-28.544-116.608-127.008 0-28.064 9.984-51.008 26.368-68.992-2.656-6.496-11.424-32.64 2.496-68 0 0 21.504-6.912 70.4 26.336 20.416-5.696 42.304-8.544 64.096-8.64 21.728.128 43.648 2.944 64.096 8.672 48.864-33.248 70.336-26.336 70.336-26.336 13.952 35.392 5.184 61.504 2.56 68 16.416 17.984 26.304 40.928 26.304 68.992 0 98.72-59.84 120.448-116.864 126.816 9.184 7.936 17.376 23.616 17.376 47.584 0 34.368-.32 62.08-.32 70.496 0 6.88 4.608 14.88 17.6 12.352C438.72 472.145 512 375.857 512 262.353 512 120.401 397.376 5.329 255.968 5.329z' />\r\n\t\t\t</SVG>\r\n\t\t</a>\r\n\t);\r\n}\r\n\r\nexport default SvgGithub;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\nimport { SVG } from '../logos/Github';\r\n\r\nexport const VolumeSVG = styled(SVG)`\r\n\tmargin: ${(props) => (props.timeline === 'init' ? '1rem auto' : '0 auto')};\r\n\theight: 1.8rem;\r\n\twidth: 1.8rem;\r\n\tcursor: pointer;\r\n\tfill: #bbb;\r\n\t&:hover {\r\n\t\tfill: #fff;\r\n\t}\r\n`;\r\n\r\nfunction SvgVolumeOn(props) {\r\n\tconst { setVolume } = props;\r\n\treturn (\r\n\t\t<VolumeSVG\r\n\t\t\tonClick={() => setVolume(true)}\r\n\t\t\taria-hidden='true'\r\n\t\t\tdata-prefix='fas'\r\n\t\t\tdata-icon='volume-up'\r\n\t\t\tclassName='volume_on_svg__svg-inline--fa volume_on_svg__fa-volume-up volume_on_svg__fa-w-18'\r\n\t\t\txmlns='http://www.w3.org/2000/svg'\r\n\t\t\tviewBox='0 0 576 512'\r\n\t\t\t{...props}\r\n\t\t>\r\n\t\t\t<path d='M215.03 71.05L126.06 160H24c-13.26 0-24 10.74-24 24v144c0 13.25 10.74 24 24 24h102.06l88.97 88.95c15.03 15.03 40.97 4.47 40.97-16.97V88.02c0-21.46-25.96-31.98-40.97-16.97zm233.32-51.08c-11.17-7.33-26.18-4.24-33.51 6.95-7.34 11.17-4.22 26.18 6.95 33.51 66.27 43.49 105.82 116.6 105.82 195.58 0 78.98-39.55 152.09-105.82 195.58-11.17 7.32-14.29 22.34-6.95 33.5 7.04 10.71 21.93 14.56 33.51 6.95C528.27 439.58 576 351.33 576 256S528.27 72.43 448.35 19.97zM480 256c0-63.53-32.06-121.94-85.77-156.24-11.19-7.14-26.03-3.82-33.12 7.46s-3.78 26.21 7.41 33.36C408.27 165.97 432 209.11 432 256s-23.73 90.03-63.48 115.42c-11.19 7.14-14.5 22.07-7.41 33.36 6.51 10.36 21.12 15.14 33.12 7.46C447.94 377.94 480 319.54 480 256zm-141.77-76.87c-11.58-6.33-26.19-2.16-32.61 9.45-6.39 11.61-2.16 26.2 9.45 32.61C327.98 228.28 336 241.63 336 256c0 14.38-8.02 27.72-20.92 34.81-11.61 6.41-15.84 21-9.45 32.61 6.43 11.66 21.05 15.8 32.61 9.45 28.23-15.55 45.77-45 45.77-76.88s-17.54-61.32-45.78-76.86z' />\r\n\t\t</VolumeSVG>\r\n\t);\r\n}\r\n\r\nexport default SvgVolumeOn;\r\n","import React from 'react';\r\nimport { VolumeSVG } from './VolumeOn';\r\n\r\nfunction SvgVolumeOff(props) {\r\n\tconst { setVolume } = props;\r\n\treturn (\r\n\t\t<VolumeSVG\r\n\t\t\tonClick={() => setVolume(false)}\r\n\t\t\taria-hidden='true'\r\n\t\t\tdata-prefix='fas'\r\n\t\t\tdata-icon='volume-mute'\r\n\t\t\tclassName='volume_off_svg__svg-inline--fa volume_off_svg__fa-volume-mute volume_off_svg__fa-w-16'\r\n\t\t\txmlns='http://www.w3.org/2000/svg'\r\n\t\t\tviewBox='0 0 512 512'\r\n\t\t\t{...props}\r\n\t\t>\r\n\t\t\t<path d='M215.03 71.05L126.06 160H24c-13.26 0-24 10.74-24 24v144c0 13.25 10.74 24 24 24h102.06l88.97 88.95c15.03 15.03 40.97 4.47 40.97-16.97V88.02c0-21.46-25.96-31.98-40.97-16.97zM461.64 256l45.64-45.64c6.3-6.3 6.3-16.52 0-22.82l-22.82-22.82c-6.3-6.3-16.52-6.3-22.82 0L416 210.36l-45.64-45.64c-6.3-6.3-16.52-6.3-22.82 0l-22.82 22.82c-6.3 6.3-6.3 16.52 0 22.82L370.36 256l-45.63 45.63c-6.3 6.3-6.3 16.52 0 22.82l22.82 22.82c6.3 6.3 16.52 6.3 22.82 0L416 301.64l45.64 45.64c6.3 6.3 16.52 6.3 22.82 0l22.82-22.82c6.3-6.3 6.3-16.52 0-22.82L461.64 256z' />\r\n\t\t</VolumeSVG>\r\n\t);\r\n}\r\n\r\nexport default SvgVolumeOff;\r\n","import React, {\r\n\tuseState,\r\n\tuseContext,\r\n\tuseEffect,\r\n\tuseRef,\r\n\tuseCallback,\r\n} from 'react';\r\nimport Init from './Init';\r\nimport GameSetup from './GameSetup';\r\nimport GameStart from './GameStart';\r\nimport WinnerScreen from './WinnerScreen';\r\nimport { store } from '../../GameController';\r\nimport {\r\n\tMainWindow,\r\n\tVolumeContainer,\r\n} from '../styled_components/gameControllerStyles';\r\nimport music from '../../assets/sounds/music.mp3';\r\nimport backgroundSound from '../../assets/sounds/background_sound.mp3';\r\nimport fireShot from '../../assets/sounds/fire_shot.mp3';\r\nimport shotHit from '../../assets/sounds/shot_hit.mp3';\r\nimport shotMiss from '../../assets/sounds/shot_miss.mp3';\r\nimport VolumeOn from '../icons/VolumeOn';\r\nimport VolumeOff from '../icons/VolumeOff';\r\n\r\nexport default function GameWindow() {\r\n\tconst { state } = useContext(store);\r\n\tconst { timeline, winner } = state;\r\n\tconst [dismount, setDismount] = useState(false);\r\n\tconst [volume, setVolume] = useState(true);\r\n\r\n\t// pass to props to avoiding directly passing a setState function\r\n\tconst setVolumeProps = (value) => {\r\n\t\tvalue\r\n\t\t\t? (musicPlayer.current.volume = 0.5)\r\n\t\t\t: (musicPlayer.current.volume = 0);\r\n\t\tsetVolume(value);\r\n\t};\r\n\r\n\tconst musicPlayer = useRef();\r\n\t// I provide two sound players so sound effects can \"overlap\"\r\n\tconst soundPlayer = useRef();\r\n\tconst soundPlayer2 = useRef();\r\n\r\n\t// cancel animation coming into this component\r\n\tuseEffect(() => {\r\n\t\tsetDismount(false);\r\n\t}, [setDismount]);\r\n\r\n\t// to avoid passing a setState directly, pass this helper function\r\n\tconst setDismountProp = (state) => {\r\n\t\tsetDismount(state);\r\n\t};\r\n\r\n\tconst playBgSound = useCallback(\r\n\t\t(sound, customVolume) => {\r\n\t\t\tif (volume) {\r\n\t\t\t\tconst newVol = customVolume || 0.5;\r\n\t\t\t\tif (!musicPlayer.current.paused) musicPlayer.current.pause();\r\n\t\t\t\tmusicPlayer.current.src =\r\n\t\t\t\t\tsound === 'music'\r\n\t\t\t\t\t\t? music\r\n\t\t\t\t\t\t: sound === 'bgSound'\r\n\t\t\t\t\t\t? backgroundSound\r\n\t\t\t\t\t\t: null;\r\n\t\t\t\tmusicPlayer.current.load();\r\n\t\t\t\tmusicPlayer.current.volume = newVol;\r\n\t\t\t\tmusicPlayer.current.play();\r\n\t\t\t}\r\n\t\t},\r\n\t\t[volume]\r\n\t);\r\n\r\n\tconst playSound = useCallback(\r\n\t\t(sound, customVolume) => {\r\n\t\t\tif (volume) {\r\n\t\t\t\tconst newVol = customVolume || 0.5;\r\n\t\t\t\tlet player = soundPlayer;\r\n\t\t\t\tif (!soundPlayer.current.paused) {\r\n\t\t\t\t\tplayer = soundPlayer2;\r\n\t\t\t\t}\r\n\t\t\t\tplayer.current.src =\r\n\t\t\t\t\tsound === 'fireShot'\r\n\t\t\t\t\t\t? fireShot\r\n\t\t\t\t\t\t: sound === 'shotMiss'\r\n\t\t\t\t\t\t? shotMiss\r\n\t\t\t\t\t\t: sound === 'shotHit'\r\n\t\t\t\t\t\t? shotHit\r\n\t\t\t\t\t\t: null;\r\n\t\t\t\tplayer.current.load();\r\n\t\t\t\tplayer.current.volume = newVol;\r\n\t\t\t\tplayer.current.play();\r\n\t\t\t}\r\n\t\t},\r\n\t\t[volume]\r\n\t);\r\n\r\n\tconst checkIfMusicPaused = () => {\r\n\t\treturn musicPlayer.current.paused;\r\n\t};\r\n\r\n\tconst fadeOutMusic = () => {\r\n\t\tconst fadeOut = setInterval(() => {\r\n\t\t\tif (musicPlayer.current.volume <= 0.04) {\r\n\t\t\t\tmusicPlayer.current.volume = 0;\r\n\t\t\t\tclearInterval(fadeOut);\r\n\t\t\t} else {\r\n\t\t\t\tmusicPlayer.current.volume = musicPlayer.current.volume - 0.03;\r\n\t\t\t}\r\n\t\t}, 30);\r\n\t};\r\n\r\n\t// conditionally render based on the app state \"timeline\"\r\n\tconst renderChild = (timeline) => {\r\n\t\treturn timeline === 'init' ? (\r\n\t\t\t<Init\r\n\t\t\t\tplayBgSound={playBgSound}\r\n\t\t\t\tcheckIfMusicPaused={checkIfMusicPaused}\r\n\t\t\t\tdismount={dismount}\r\n\t\t\t\tsetDismount={setDismountProp}\r\n\t\t\t/>\r\n\t\t) : timeline === 'setup' ? (\r\n\t\t\t<GameSetup\r\n\t\t\t\tdismount={dismount}\r\n\t\t\t\tfadeOutMusic={fadeOutMusic}\r\n\t\t\t\tsetDismount={setDismountProp}\r\n\t\t\t/>\r\n\t\t) : winner ? (\r\n\t\t\t<WinnerScreen playBgSound={playBgSound} />\r\n\t\t) : !winner ? (\r\n\t\t\t<GameStart\r\n\t\t\t\tplaySound={playSound}\r\n\t\t\t\tplayBgSound={playBgSound}\r\n\t\t\t\tsetDismount={setDismount}\r\n\t\t\t/>\r\n\t\t) : null;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<MainWindow>\r\n\t\t\t<VolumeContainer timeline={timeline}>\r\n\t\t\t\t{volume ? (\r\n\t\t\t\t\t<VolumeOff setVolume={setVolumeProps} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<VolumeOn setVolume={setVolumeProps} />\r\n\t\t\t\t)}\r\n\t\t\t</VolumeContainer>\r\n\t\t\t{renderChild(timeline)}\r\n\t\t\t<>\r\n\t\t\t\t<audio onEnded={() => musicPlayer.current.play()} ref={musicPlayer} />\r\n\t\t\t\t<audio ref={soundPlayer} />\r\n\t\t\t\t<audio ref={soundPlayer2} />\r\n\t\t\t</>\r\n\t\t</MainWindow>\r\n\t);\r\n}\r\n","import styled from 'styled-components';\r\n\r\nconst HeaderComponent = styled.div`\r\n\tmargin: 1rem auto 0;\r\n\tdisplay: flex;\r\n\toverflow: hidden;\r\n`;\r\n\r\nconst Logo = styled.img`\r\n\tmargin: auto;\r\n\theight: ${(props) => (props.large ? 'auto' : '3rem')};\r\n\t@media (max-width: 1000px) {\r\n\t\theight: ${(props) => (props.large ? '4rem' : '2rem')};\r\n\t}\r\n\tanimation: rise 8s ease-out;\r\n`;\r\n\r\nexport { HeaderComponent, Logo };\r\n","export default __webpack_public_path__ + \"static/media/bs_logo.46ed26ed.png\";","import React, { useContext } from 'react';\r\nimport { HeaderComponent, Logo } from '../styled_components/headerStyles';\r\nimport logo from '../../assets/images/bs_logo.png';\r\nimport { store } from '../../GameController';\r\n\r\nexport default function Header() {\r\n\tconst { timeline } = useContext(store).state;\r\n\treturn (\r\n\t\t<HeaderComponent>\r\n\t\t\t<Logo large={timeline === 'init'} src={logo} />\r\n\t\t</HeaderComponent>\r\n\t);\r\n}\r\n","import styled from 'styled-components';\r\n\r\nconst FooterComponent = styled.div`\r\n\tdisplay: flex;\r\n\tposition: relative;\r\n\tbottom: 0;\r\n\tleft: 0;\r\n\tright: 0;\r\n\tpadding: 1rem;\r\n\tfont-family: 'Big Shoulders Text', cursive;\r\n\tbackground: rgb(126, 126, 126);\r\n\tbackground: linear-gradient(\r\n\t\t90deg,\r\n\t\trgba(126, 126, 126, 1) 0%,\r\n\t\trgba(205, 205, 203, 1) 29%,\r\n\t\trgba(181, 181, 181, 1) 76%,\r\n\t\trgba(122, 122, 122, 1) 100%\r\n\t);\r\n\theight: 4rem;\r\n\tjustify-content: center;\r\n\ttext-align: center;\r\n\t& > :first-child {\r\n\t\tmargin-left: auto;\r\n\t\tpadding-right: 1rem;\r\n\t}\r\n\t& > :last-child {\r\n\t\tmargin-right: auto;\r\n\t\tpadding-left: 1rem;\r\n\t}\r\n`;\r\n\r\nconst FooterText = styled.p`\r\n\tcolor: #000129;\r\n\tmargin: auto 0;\r\n\t& > a {\r\n\t\ttransition: 0.5s;\r\n\t}\r\n\t& > a:link,\r\n\t& > a:active,\r\n\t& > a:visited {\r\n\t\tcolor: #000129;\r\n\t}\r\n\t& > a:hover {\r\n\t\tcolor: #333;\r\n\t\ttransition: 0.5s;\r\n\t}\r\n`;\r\n\r\nconst FooterLinksDiv = styled.div`\r\n\tdisplay: flex;\r\n\t& > * {\r\n\t\tmargin: auto;\r\n\t}\r\n`;\r\n\r\nexport { FooterComponent, FooterText, FooterLinksDiv };\r\n","import { FooterLinksDiv } from '../styled_components/footerStyles';\r\nimport Github from '../logos/Github';\r\nimport React from 'react';\r\n\r\nfunction FooterLinks() {\r\n\treturn (\r\n\t\t<FooterLinksDiv>\r\n\t\t\t<Github />\r\n\t\t</FooterLinksDiv>\r\n\t);\r\n}\r\n\r\nexport default FooterLinks;\r\n","import { FooterComponent, FooterText } from '../styled_components/footerStyles';\r\nimport FooterLinks from './FooterLinks';\r\nimport React from 'react';\r\n\r\nexport default function Footer() {\r\n\treturn (\r\n\t\t<FooterComponent>\r\n\t\t\t<FooterLinks />\r\n\t\t\t<FooterText>\r\n\t\t\t\tCreated by Mark Langhamer\r\n\t\t\t</FooterText>\r\n\t\t</FooterComponent>\r\n\t);\r\n}\r\n","import styled from 'styled-components';\r\n\r\nconst StyledApp = styled.div`\r\n\tdisplay: flex;\r\n\tposition: relative;\r\n\twidth: 100%;\r\n\tflex-direction: column;\r\n\tbackground: rgb(2, 0, 36);\r\n\tbackground: linear-gradient(\r\n\t\t90deg,\r\n\t\trgba(2, 0, 36, 1) 0%,\r\n\t\trgba(0, 0, 61, 1) 29%,\r\n\t\trgba(0, 0, 64, 1) 76%,\r\n\t\trgba(1, 0, 37, 1) 100%\r\n\t);\r\n\toverflow: auto;\r\n`;\r\n\r\nconst Header = styled.header`\r\n\twidth: 100%;\r\n`;\r\n\r\nconst GameWindowContainer = styled.div`\r\n\tdisplay: flex;\r\n\tposition: relative;\r\n\twidth: 100%;\r\n\tmargin: 1rem auto 0;\r\n\tflex: 1;\r\n`;\r\n\r\nexport { StyledApp, Header, GameWindowContainer };\r\n","import React from 'react';\r\nimport GameWindow from './components/game_window/GameWindow';\r\nimport HeaderComponent from './components/header/Header';\r\nimport Footer from './components/footer/Footer';\r\nimport {\r\n\tStyledApp,\r\n\tHeader,\r\n\tGameWindowContainer,\r\n} from './components/styled_components/appStyles';\r\nimport GameController from './GameController';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<GameController>\r\n\t\t\t<StyledApp>\r\n\t\t\t\t<HeaderComponent>\r\n\t\t\t\t\t<Header />\r\n\t\t\t\t</HeaderComponent>\r\n\t\t\t\t<GameWindowContainer>\r\n\t\t\t\t\t<GameWindow />\r\n\t\t\t\t</GameWindowContainer>\r\n\t\t\t\t<Footer />\r\n\t\t\t</StyledApp>\r\n\t\t</GameController>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}